spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.database.driverClassName=org.postgresql.Driver
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:7075/Aplicacao}
spring.datasource.username=root
spring.datasource.password=root

server.port=8079

management.endpoint.health.group.custom.show-components=always
management.endpoint.health.show-details=always
management.endpoint.health.status.http-mapping.down=503

spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}

keycloak.domain=http://localhost:18080
keycloak.realms=nosso-cartao

periodicidade.executa-operacao=30000

management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true

management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:servico de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${servico-propostas} 

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

# True para enviar 100% valores constantemente no jeager
opentracing.jaeger.const-sampler.decision=${JAEGER_SAMPLER:false}

# Para enviar 50% envia 50% das amostragens 
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:0.5}

# Para enviar 10 traces por segundo 
opentracing.jaeger.rate-limiting-sampler.max-traces-per-second=${JAEGER_SAMPLER:10}

opentracing.spring.cloud.jdbc.enabled=false